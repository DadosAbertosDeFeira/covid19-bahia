from datetime import datetime
import os
import psycopg2
import sqlite3


class DatabaseWriterPipeline(object):
    def open_spider(self, spider):
        self.connection = psycopg2.connect(os.getenv("DATABASE_URL"))
        self.cursor = self.connection.cursor()

        self.cursor.execute(
            """
            SELECT EXISTS (
                SELECT FROM information_schema.tables
                WHERE table_name = 'news'
            );
        """
        )
        table_exists = self.cursor.fetchone()[0]
        spider.last_news_date = None

        if not table_exists:
            self.cursor.execute(
                """CREATE TABLE news
                (
                    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                    date TIMESTAMP NOT NULL,
                    url TEXT NOT NULL,
                    title TEXT NOT NULL,
                    crawled_at TIMESTAMP NOT NULL,
                    text TEXT NOT NULL,
                    is_synced BOOLEAN NOT NULL
                );
            """
            )
            self.connection.commit()
        else:
            self.cursor.execute(
                """
                SELECT date FROM news ORDER BY date DESC LIMIT 1;
            """
            )
            date_obj = self.cursor.fetchone()
            if date_obj:
                spider.last_news_date = date_obj[0]

    def close_spider(self, spider):
        self.cursor.close()
        self.connection.close()

    def process_item(self, item, spider):
        self.save_item(item)
        return item

    def save_item(self, item):
        self.cursor.execute("SELECT id FROM news WHERE url=%s", (item["url"],))
        found = self.cursor.fetchone()

        if not found:
            self.cursor.execute(
                """
                    INSERT INTO news (
                        date,
                        url,
                        title,
                        crawled_at,
                        text,
                        is_synced
                    )
                    VALUES (
                        %s,
                        %s,
                        %s,
                        %s,
                        %s,
                        FALSE
                    );
                """,
                (
                    item["date"],
                    item["url"],
                    item["title"],
                    item["crawled_at"],
                    item["text"],
                ),
            )
            self.connection.commit()
